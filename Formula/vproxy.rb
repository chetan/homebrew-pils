# This file was generated by GoReleaser. DO NOT EDIT.
class Vproxy < Formula
  desc "zero-config virtual proxies with tls"
  homepage "https://github.com/jittering/vproxy"
  version "0.4.5"
  bottle :unneeded

  if OS.mac?
    url "https://github.com/jittering/vproxy/releases/download/v0.4.5/vproxy_0.4.5_Darwin_x86_64.tar.gz"
    sha256 "518c6e601f8c1305fff893a06f3128876a64054f9b8ca16b0af33ae8dc5ad2a3"
  end
  if OS.linux? && Hardware::CPU.intel?
    url "https://github.com/jittering/vproxy/releases/download/v0.4.5/vproxy_0.4.5_Linux_x86_64.tar.gz"
    sha256 "4971f725d00d7d232ff3d1842a05e60cda72131ad6932378c1dc73a74751b633"
  end

  depends_on "mkcert"

  def install
    bin.install "vproxy"

    # only create if it doesn't already exist
    conf_file = "#{etc}/vproxy.conf"
    if !File.exist?(conf_file) then
      File.open(conf_file, "w") do |f|
        str = <<-EOF
      # Sample config file
      # All commented settings below are defaults

      [server]
      # IP on which server will listen
      # To listen on all IPs, set listen = "0.0.0.0"
      #listen = "127.0.0.1"

      # Ports to listen on
      #http = 80
      #https = 443


      # The following paths are set explicitly to facilitate running as root

      # mkcert's CAROOT path
      # Set to output of `mkcert -CAROOT`
      caroot_path = "#{`mkcert -CAROOT`.strip}"

      # Path where generated certificates should be stored
      cert_path = "#{ENV['HOME']}/.vproxy"

      # Path to mkcert program
      mkcert_path = "#{`which mkcert`.strip}"

      [client]
      #host = "127.0.0.1"
      #http = 80

      # Use this in local config files, i.e., a .vproxy.conf file located in a
      # project folder
      #bind = ""
      EOF
        f.puts str.gsub(/^\s+/, "")
      end
    end
  end

  plist_options :startup => false

  def plist; <<~EOS
    <?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>KeepAlive</key>
    <dict>
      <key>SuccessfulExit</key>
      <false/>
    </dict>
    <key>Label</key>
    <string>#{plist_name}</string>
    <key>ProgramArguments</key>
    <array>
      <string>#{bin}/vproxy</string>
      <string>daemon</string>
    </array>
    <key>RunAtLoad</key>
    <true/>
    <key>WorkingDirectory</key>
    <string>#{var}</string>
    <key>StandardErrorPath</key>
    <string>#{var}/log/vproxy.log</string>
    <key>StandardOutPath</key>
    <string>#{var}/log/vproxy.log</string>
  </dict>
</plist>

  EOS
  end

  test do
    system "#{bin}/vproxy --version"
  end
end
